#Splunk Queries
Alerts:
#Count of hosts
| inputlookup us_splunk_unique_hosts.csv
| stats count
|  search count < 5



#DLP ALERTING
index=efx_bluecoat action="blocked" NOT x_exception_id="-"
| stats count by x_exception_id
| search x_exception_id=icap_error



#PHISHING RELATED PROCEDURES REPORT
index="efx_demisto"

| rename
CustomFields.resolutiontags{} as resolution_tags
CustomFields.killchain{} as killchain
| eval
resolution_tags = mvjoin(resolution_tags, ", "),
killchain = mvjoin(killchain, ", ")

| stats
latest(CustomFields.assignmentgroup) as assignment_group
latest(CustomFields.investigationphase) as investigation_phase
latest(CustomFields.closurereason) as closure_reason
latest(CustomFields.categories{}) as category
latest(name) as name
latest(created) as created
latest(occurred) as occurred
latest(CustomFields.detected) as detected
latest(sourceInstance) as source_instance
latest(resolution_tags) as resolution_tags
latest(CustomFields.subcategories{}) as subcategories
latest(CustomFields.contained) as contained
latest(killchain) as killchain
latest(CustomFields.affectedusers) as affected_users
latest(CustomFields.reportinguseremail) as reporting_user
latest(CustomFields.alertsource{}) as alert_source
by id

| fillnull value=EMPTY

| eval
created_epoch = strptime(created, "%Y-%m-%dT%T"),
in_range =
if(
	created_epoch < now() AND
		created_epoch > relative_time(now(),"-30d"),
	1,
	0
),
SOC_process =
	case(
		match(name, "(?i).*ETP.*"),
		"ETP",

		match(name, "(?i).*PhishMe.*"),
		"PhishMe",

		match(name, "(?i).*G Suite.*"),
		"G Suite",
		match(name, "(?i).*GSuite.*"),
		"G Suite",
		match(name, "(?i).*G-Suite.*"),
		"G Suite"
	)

| where
in_range=1 AND
assignment_group="SOC" AND
investigation_phase="Closed" AND
closure_reason!="Duplicate" AND
subcategories in ("Phishing", "Spam", "Legitimate") AND
source_instance!="FireEye ETP Quarantine"

| eval affected_users =
	if(
		alert_source="PhishMe",
		reporting_user,
		affected_users
	)

| table
id
name
affected_users
contained
occurred
detected
resolution_tags
subcategories
closure_reason
killchain
SOC_process



#Notify Skipped Search
index=_* host="splkshes103.sec.equifax.com"  sourcetype=scheduler status=skipped (savedsearch_name=*CIRT* OR savedsearch_name=*SOC* OR savedsearch_name=*InTP*)
| table _time savedsearch_name reason concurrency_category concurrency_limit

#NON REPORTING AUTO DISCOVER
| tstats count where index=* NOT 
    [| inputlookup nonreporting.csv 
    | fields index] by index
| fillnull active value="Yes"
| fillnull threshold value="3600"
| append 
    [| inputlookup nonreporting.csv]
| table index active threshold
| outputlookup nonreporting.csv


#NON REPORTING
| tstats latest(_time) as ltime count where index=* by index
| lookup nonreporting.csv index as index OUTPUT active threshold
| eval diff=now()-ltime
| convert ctime(ltime)
| where active = "Yes"
| where diff > threshold
| table index ltime diff threshold
| rename ltime as "Last Event Seen"
| eval diff=round(diff/3600,2)
| eval threshold=round(threshold/3600,2)
| rename diff as "Difference in time (hours)"
| rename threshold as "Alerting threshold (hours)"


#MONITORING LDAP CONNECTION
wineventlog Service_Name="s_pingauthn_pr_eis" OR Service_Name="s_pingauthn_eis" status=successindex=

#MIV DAILY UPDATE
|  jira jqlsearch "(project=MIV)"
| rex field=Priority "name\": \"(?<priority>\w*)\""
| rex field=Assignee "displayName\": \"(?<assigned>\w* \w*)"
| rex field=Reporter "displayName\": \"(?<reporter>\w* \w*)"
| rex field=Status "name\": \"(?<Status3>Unassigned|Backlog|Reported to Remediation Owner|Ongoing Remediation|Under Security Exception|Done|In Progress)\""

| eval priorityNumber=case(priority="Critical",1,priority="High",2,priority="Medium",1,priority="Low",0)
| sort - priorityNumber
| table priority Summary Created Status3 Description reporter assigned Key


#LEGACY BLUECOAT PROXY USERS
| tstats count FROM datamodel=Web WHERE nodename=Web index=efx_bluecoat BY "Web.user"
| search Web.user!= "-" AND Web.user!= "unknown" AND Web.user!= "200" AND Web.user!= "0" AND Web.user!= "407"
| sort - count


LEGACY BLUECOAT PROXY DOMAIN ADMINS
| tstats count FROM datamodel=Web WHERE nodename=Web index=efx_bluecoat AND (Web.user="x-*" OR Web.user="y-*" OR Web.user="z-*") BY Web.user Web.action Web.category Web.dest
| rename Web.* AS *
| eval dest=dest+" ("+action+")"
| stats values(dest) AS Destination values(category) AS Category count by user
| sort - count


JARED VPN LOGINS UNIQUE USERS
| tstats count FROM datamodel=Web WHERE nodename=Web index=efx_bluecoat AND (Web.user="x-*" OR Web.user="y-*" OR Web.user="z-*") BY Web.user Web.action Web.category Web.dest
| rename Web.* AS *
| eval dest=dest+" ("+action+")"
| stats values(dest) AS Destination values(category) AS Category count by user
| sort - count

#INDICATOR BY INCIDENTID
index="efx_demisto" sourcetype="demisto_indicators" 
| rename investigationIDs{} as incident_id 
| table value,incident_id,id, indicator_type
| mvexpand incident_id limit=0 
| stats last(value) as Name , last(indicator_type) as IndicatorType by id,incident_id

#HACKER ONE DAILY UPDATE
|  jira jqlsearch "(project=H1)"
| rex field=Priority "name\": \"(?<priority>\w*)\""
| rex field=Assignee "displayName\": \"(?<assigned>\w* \w*)"
| rex field=Reporter "displayName\": \"(?<reporter>\w* \w*)"
| rex field=Status "Software\", \"name\": \"(?<Status>Validation|New Triaged|Backlog|Locating Owner|Ongoing Remediation|Award issued|Closed|Reported To Owner|Done|Reported|In Progress)\""

| eval priorityNumber=case(priority="Critical",1,priority="High",2,priority="Medium",1,priority="Low",0)
| sort - priorityNumber
| table priority Summary Created Status Description reporter assigned Key

#EPS AVERAGE - Count
| tstats count where index=efx_* OR index=wineventlog by _time span=1s
| stats avg(count) as average max(count) as max

DROP_IN_VOLUME_BY_INDEX
index=_internal sourcetype=splunkd component=LicenseUsage type=Usage 
| bin span=1m _time
| stats sum(b) as bytes by _time, idx
| eval indexed_mb = ceiling(bytes/1048576) 
| stats sum(indexed_mb) as indexed_mb by _time, idx
| stats perc75(indexed_mb) as perc75_indexed_mb, latest(indexed_mb) as current_indexed_mb by idx
| where current_indexed_mb > perc75_indexed_mb

#DNS - SUSPICIOUS DNS
index=efx_infoblox earliest=@h-1h latest=@h  636f6d6d616e642073657373696f6e OR 636d64 OR 77686f616d69 OR dnscat OR 646e73636174 OR 65786563757465 OR passwd OR 706173737764 OR 2f6574632f OR 62617368 OR d2hvYW1p OR "Y21kLmV4ZQ==" NOT ( passwd.org OR query="linux-grub-missing-passwd.fin.equifax.com" OR query="linux-grub-missing-passwd.equifax.ca")
| rex field=query "(?<RootDomain>[a-zA-Z0-9\-]+\.([a-zA-Z]+|([a-zA-Z0-9\-]+\.([a-zA-Z0-9]+|a-zA-Z0-9\.]+)))$)"
| eval QueryLen=len(query) 
| stats values(query) as Query dc(query) as QueryCount values(src) as src count by RootDomain QueryLen 
| sort -QueryCount

#WSS LAST DELAYS
| tstats count from datamodel=Web where (index=efx_wss AND Web.dest=mail.google.com) by Web.duration _time span=15m
| rename Web.duration as time_taken
| stats avg(time_taken) as average max(time_taken) as max by _time
| eval average = round(average/1000,2)
| eval stdev = round(stdev,2)
| eval max = max/1000

| sort - _time
| head 20

#webshell detection
index=efx_f5asm http_method=POST AND ( uri=*.php OR uri=*.jsp OR uri=*.asp OR uri=*.aspx) NOT ("WhiteHat Security" OR ip_client="10.0.0.0/8" OR ip_client="192.168.0.0/16" OR ip_client="172.16.0.0/12" OR ip_client=127.0.0.1 OR 
    [| inputlookup Approved_scanners.csv ] OR (ip_client=12.7.177.130 AND qualys) ) 
| iplocation ip_client 
| regex uri="\/([a-zA-Z0-9]{1,3}|webshell|shell|backdoor|cknife)\.(php|jsp|asp|aspx)" 
| append 
    [ search ((index=efx_proxy OR index=efx_bluecoat OR index=efx_sinkhole OR index=efx_ips OR index=efx_f5asm) POST AND ( "cmd=phpinfo" OR "cmd=system" OR "cmd=getcwd" OR "cmd=echo%20getcwd" OR "cmd=scandir" OR "cmd=echo%20scandir" OR "cmd=echo" OR "cmd=print_r" OR "cmd=copy" OR "cmd=rename" OR "@eval(base64_decode($_POST[" OR PD9waHAgQGV2YWwo OR PCVldmFsKFJlcXVlc3QuSXRlbVs OR "<%eval(Request.Item[" OR PCVldmFsIHJlcXVlc3Qo OR "@eval_r($_POST[" OR QGV2YWxfcigkX1BPU1Rb OR "<?php assert($_REQUEST[" OR PD9waHAgYXNzZXJ0KCRfUkVRVUVTVFs OR "<?php eval($" OR PD9waHAgZXZhbCgk OR "<?php print_r(scandir(" OR PD9waHAgcHJpbnRfcihzY2FuZGlyKA OR "php @eval(base64_decode($_POST[" OR "<?php @eval($_POST['" OR "<%eval(Request.Item[" OR "<%eval request(" OR "@eval_r($_POST[" OR "<?php eval($_POST[" OR "<?php assert($_REQUEST[" OR "<?php eval($_REQUEST[" OR "<?php print_r(scandir(" OR "php @eval(base64_decode($_POST['" OR "maicaidao.com" OR "c99shell" OR "TinyShell" OR "knull-shell" OR "RootShell Security Group" OR "$UeXploiT" OR "An0n_3xPloiTeR" OR "devilzShell" OR "b374k" OR "devilzc0der" OR "Cknife" OR "1nul1mpr" OR "sunnyelf/cheetah" OR "PHP-webshell" OR "Spider PHP Shell" OR "jspwebshell" OR "phpwebshell" OR "JSP Backdoor" OR "PHP Backdoor" OR "simple_backdoor" OR "PHP-simple_cmd" OR "PHP-cybershell" OR "cmd99shell" OR "PHP-root_shell" OR "PHP-shankar" OR "ajax_php_command_shell" OR "easy_php_shell" OR "s72_shell" OR "crazy_king@turkusev.net" OR "Data Cha0s Connect Back Shell" OR "AnonGhost Bypass Shell" OR "ASPXSpyControl" OR "laudanum" OR "Phpshell-team" OR "phpshell.sourceforge.net" OR "$_SESSION['cwd']" OR "Knull shell" OR "AES Encrypted Reverse HTTP Listener" OR "findsock-shell" OR "Weevely" OR ( "ShellCmd(" "python -c") OR "hackcity-shell" OR "H4Ck City" OR "cyb3r_getupdate" OR "dQ99sh" OR "name=sh311Form" OR "PHPJackal" OR "reddragonfly.org" OR "Reddragonfly's WebShell" OR "CrystalShell" OR "phpsocks5_encrypt(" OR "define('PHPSHELL_VERSION'," OR "PHVayv.php?duzkaydet=" OR "phpRemoteView" OR "envlpass" OR "KingDefacer" OR "relative2absolute($" OR "PHPKonsole" OR "IP filter disable succeed!You need to restart server to make it effective." OR ( "(strtolower($cmd)" canirun ) OR "$shell = 'uname -a; w; *id;" OR "Avrasya Veri ve NetWork" OR "shopen@aventgrup.net" OR ("$MyShellVersion" "MyShell") OR "$OOO000000=urldecode" OR "ARS Terminator Shell" OR "HTTP-revshell" OR "Invoke-WebRev.ps1" OR "Viper1337" OR "Defray777" OR "Raiz0WorM" OR "zerobyte.id" OR "zerobyte-id" OR huc08.com OR wooyun.org OR 7jyewu.cn OR "j3mb03dz m4w0tz sh311" OR TrustedSec OR "Simple Reverse Shell" OR "reverse-shell" OR "Successfully opened reverse shell" OR "for educational purposes only" OR "This tool may be used for legal purposes only" OR "Tihuan_Auto" OR china-infosec.org.cn OR xxddos.com OR ihacklog.com OR pentestmonkey.net OR darkc0de.com OR leethack.info OR ljuska.org OR secmaniac.com OR "W3D Shell" OR "w4ck1ng shell" OR "w4ck1ng-shell" OR "$back_connect=\"IyEvdXNyL2Jpbi9wZXJsD" OR "$randMath=rand(geturlcontent(" OR "Web Shell By" OR "WebShell By" OR "df5bd34799e200951fcce77c1c0b42af" OR "Ddzq1Mg6rIJDCAj7ch78vl3ZEGcXnqKjs97gs5y" OR "'xiaoqiwangluo'" OR "EqQC1FhyXxpEi7l2g\+yNjW62S" OR "1MSSYowqjzlVVAwAoHHFXzQ5Lc" OR "ZXZhbCgkX1BPU1RbMV0p" OR "eNrsvGmT40iSKPZ5xmz" OR "PD9waHANCiRzX3ZlciA9ICIxLjAiOw0KJHNfdGl0bGUgPSAiWG5vbnltb3V4IFNoZWxsIC" OR "GFnyF4lgiGXW2N7BNyL5EEyQA42LdZtao2S9f" OR "IyEvdXNyL2Jpbi9wZXJsDQokU0hFTEw9Ii9iaW4vYmFzaCAtaSI7" OR cGhwIEBldmFsKGJhc2U2NF9kZWNvZGUoJF9QT1NUWw)) OR ((index=efx_ips OR index=efx_f5asm) webshell NOT ("Nuclei Scanner" OR "github.com/projectdiscovery/nuclei" OR "Fuzz Faster U Fool v" OR status=404 OR resp_code="404" OR method="GET" OR "WhiteHat Security" OR src="10.0.0.0/8" OR src="192.168.0.0/16" OR src="172.16.0.0/12" OR src=127.0.0.1 OR 
        [| inputlookup Approved_scanners.csv | rename src_ip as src] OR (src=12.7.177.130 AND qualys))) 
    | iplocation src] 
| append 
    [ search (index=efx_f5asm ( ("*/favicon_*" *.ico) OR *.bak.bak ) NOT ("Nuclei Scanner" OR "github.com/projectdiscovery/nuclei" OR "Fuzz Faster U Fool v" OR status=404 OR resp_code="404" OR method="GET" OR "WhiteHat Security" OR src="10.0.0.0/8" OR src="192.168.0.0/16" OR src="172.16.0.0/12" OR src=127.0.0.1 OR 
        [| inputlookup Approved_scanners.csv | rename src_ip as src] OR (src=12.7.177.130 AND qualys))) 
    | iplocation src] 
| fillnull value="-" 
| eval signature=coalesce(msg,attack_type), blocked=if(blocked="1","blocked", "not-blocked") | eval req_status=coalesce(req_status, blocked) 
| stats values(page) as page values(signature) as attack_signature values(index) as index values(src) as src values(Country) as Country count by dest_ip uri dest_port


#Port Scan Detection
index=summary earliest=@d-1d latest=@d search_name="SI-Domains" Domain="0.0.0.0/0" OR Domain="172.16.0.0/12" OR Domain="10.0.0.0/8" OR Domain=*.equifax.*  
| eval EndpointIP=split(EndpointIP," "), Port=split(Port," "), UserAgent=split(UserAgent, "\""), URLClassification=split(URLClassification, "\""), UserName=split(UserName, " ") 
| search NOT (Port=80 OR Port=443 OR [|inputlookup VulnScanners.csv | rename IP as query | fields query] OR [|inputlookup Approved_scanners.csv | rename src_ip as query])
| stats dc(Port) as PortCount values(Port) as Port values(Domain) as Domain values(UserAgent) as UserAgent values(URLClassification) as Category values(UserName) as UserName count by EndpointIP | where PortCount >3 | sort -PortCount


#SOC Current Open Events



#Sample Netskope URL Alert Action
| makeresults | eval urls=split("something.example.com,erewhon.example.com",",") | mvexpand urls | eval url=urls

#Sample Netskope File Hash Alert Action
| makeresults | eval hashes=split("s,a,a",",") | mvexpand hashes | eval file_hash=md5(hashes)

#Splunk Health - Orphaned Searches
| rest timeout=600 splunk_server=local /servicesNS/-/-/saved/searches add_orphan_field=yes count=0 
| search orphan=1 disabled=0 is_scheduled=1 
| eval status = if(disabled = 0, "enabled", "disabled") 
| fields title eai:acl.owner eai:acl.app eai:acl.sharing orphan status is_scheduled cron_schedule next_scheduled_time next_scheduled_time actions 
| rename title AS "search name" eai:acl.owner AS owner eai:acl.app AS app eai:acl.sharing AS sharing

#Splunk alerts for missing eStreamer logs
| inputlookup heavyforwarders.csv 
| eval count=0
| join type=outer host 
    [ | tstats count where index=efx_ips by host  ] 
| where count == 0
|  table host count

#Suspicious Web Activity
index=efx_proxy OR index=efx_bluecoat ((virus_detected OR x_virus_id=* OR malware_name=* OR ns_detection_name=* OR alert_type="Malware" OR alert_type=malsite) NOT (x_virus_id="-" OR malware_name="-" OR ns_detection_name="-")) OR
     [| inputlookup web-watchlist.csv 
    | rename Indicator as query | eval query="*".query."*"
    | fields query] 
    OR (cs_host="*.gov.*" OR cs_host="*.mil.*" OR page="*.gov.*" OR page="*.mil.*" NOT (category=Military OR category="*Government*" OR page=*.gov.uk OR page=*.mil.uk OR page=*.gov.au OR page=*.gov.ph OR page=*.gov.ar OR page=*.gov.ua OR page=*.gov.co OR page=*.gov.py OR page=*.gov.br OR page=*.gov.cr OR page=*.gov.it OR page="*.gov.in" OR page=*.mil.ph OR page=*.mil.co OR cs_host=*.gov.uk OR cs_host=*.mil.uk OR cs_host=*.gov.au OR cs_host=*.gov.ar OR page=*.gov.cl OR page=*.mil.pe OR cs_host=*.gov.ua OR cs_host=*.gov.co OR ((page=*.gov.* OR cs_host=*.gov.*) AND (page=*.ca OR cs_host=*.ca) OR cs_host=*.gov.py OR cs_host=*.gov.br OR cs_host=*.gov.cl OR cs_host=*.mil.pe OR cs_host=*.gov.cr OR cs_host=*.gov.it OR cs_host="*.gov.in" OR cs_host=*.mil.ph OR cs_host=*.gov.ph OR cs_host=*.mil.co))) 
    OR ((cs_uri_extension=zip OR cs_uri_extension=doc OR cs_uri_extension=xls OR cs_uri_extension=bin OR cs_uri_extension=ps1 OR cs_uri_extension=bat OR (cs_uri_extension=jar NOT (cs_uri_path=*content.jar OR cs_host=marketplace.eclipse.org OR cs_host=download.springsource.com OR cs_host=nexus.broadleafcommerce.org OR cs_host=download.oracle.com OR cs_host=download.jboss.org) ) OR http_content_type="application/msword" OR cs_uri_extension=docm OR http_content_type=.macroEnabled OR cs_uri_extension=exe OR cs_uri_extension=dmg OR cs_uri_extension=pkg OR http_content_type="application/x-msdownload" OR http_content_type="application/x-msdos-program" OR (cs_uri_extension=iso AND bytes<10000) OR cs_uri_extension=ace OR (cs_uri_extension=img AND bytes<10000 NOT cs_host=*msn-com.akamaized.net) OR cs_uri_extension=rar) 
         AND (cs_uri_path=*invoice* OR (cs_uri_path=*INV* NOT (cs_uri_path=*INVE* OR cs_uri_path=*invol* OR cs_uri_path=*Invoke-HX*)) OR cs_uri_path=*bill* OR cs_uri_path=*rechnung* OR cs_uri_path=*factura* OR cs_uri_path=*reigelridge* OR cs_uri_path=*delivery* OR cs_uri_path=*fedex* OR cs_uri_path=*TRANSFERENCIA* OR cs_uri_path=*remcos* OR cs_uri_path=*tax* OR cs_uri_path=*refund* OR cs_uri_path=*payment* OR cs_uri_path=*confirmation* OR cs_uri_path=*remittance* OR cs_uri_path=*keylog* OR cs_uri_path=*crack* OR cs_uri_path=*empire* OR cs_uri_path=*PowerSploit* OR cs_uri_path=*_encrypted_* OR cs_uri_query=*/wp-includes/* OR cs_uri_query=*/wp-content/* OR cs_uri_query=*/wp-admin/* OR cs_uri_query=*/wordpress/* OR cs_uri_query=*/cgi-bin/* OR cs_uri_path=*/wp-includes/* OR cs_uri_path=*/wp-content/* OR cs_uri_path=*/wp-admin/* OR cs_uri_path=*/wordpress/* OR cs_uri_path=*/cgi-bin/* OR cs_uri_path=*/joomla/* OR category=suspicious OR category=none OR category=unknown OR category=mal* OR category="Remote Access" OR category="Potentially Unwanted Software" OR category=Spyware) 
              NOT (cs_host=*.edu OR cs_host=repo.grails.org OR cs_host="*.equifax.com" OR cs_host="*.docusign.net" OR cs_host=hub.docker.com OR cs_host=id.docker.com OR cs_host="*-docs.googleusercontent.com" OR cs_host=invoice.risk.lexisnexis.com OR cs_host=support.symantec.com OR cs_host=www.paypal.com OR cs_uri_path=*/ews-de-billingextract* OR cs_host=www.dicom.cl OR http_content_type=image/)) 
    OR (http_user_agent="AutoIt" OR http_user_agent=wscript ) 
    OR (http_content_type="application/x-msdos-program" NOT (cs_uri_extension=exe OR cs_uri_extension=dll))
    OR "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/7.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.3; .NET CLR"
NOT 
   ( [| inputlookup SusExe-Whitelist.csv 
    | rename Whitelist as query 
    | fields query] OR cs_host=.*datadoghq.com OR page=*.datadoghq.com OR r_ip="172.16.0.0/12" OR dstip="172.16.0.0/12" OR r_ip="172.22.0.0/16" OR dstip="172.22.0.0/16")  
| eval Description="Suspicious Web Activity"
| append 
    [ search index=efx_bluecoat cs_uri_extension=exe OR http_content_type=application/x-msdos-program NOT (http_content_type="text/*" OR http_content_type="image/*" OR http_content_type="application/json*" OR http_content_type="audio/*" OR http_content_type="application/x-javascript" OR cs_uri_path="/scripts/tools/newdsn.exe" OR 
        [| inputlookup SusExe-Whitelist.csv 
        | rename Whitelist as query 
        | fields query]) 
    | rex field=cs_uri_path "\/(?<FileName>[A-Za-z0-9_\.%]+$)" 
    | regex FileName="(?i)^\d[A-Z0-9a-z_]+?\.exe$|^[a-zA-Z0-9]{1,3}\.exe$" 
    | eval Description="Regex Match - Suspicious filename" 
    | iplocation r_ip 
    | eval URL=cs_host.cs_uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description] 
| append 
    [ search index=efx_bluecoat cs_host=pastebin.
    | regex cs_uri_path="\/raw\/[a-zA-Z0-9]{8}"
    | eval Description="Regex Match - Suspicious Pastebin URI" 
    | iplocation r_ip 
    | eval URL=cs_host.cs_uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description]
| append 
    [ search (index=efx_bluecoat) cs_uri_extension=png OR (/20 cs_uri_extension=zip)
    | regex cs_uri_path="(\/[a-z0-9]{3,15}\.png\?uid=([A-Za-z0-9\+\/\-]{64,512}[=]{0,2})?)|(((\/20[0-9]{2}\/[0-9]{2}\/[a-z]+\/[0-9]{4,16}\.(?:zip|png))|((?:\/(?:[a-z]{5,32}|[0-9]{5,32})){1,3}\/[0-9]{5,16}\.zip)))"
    | eval Description="Regex Match - Quakbot SIR0048786 / QBot" 
    | iplocation r_ip 
    | eval URL=cs_host.cs_uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description]
| append 
    [ search index=efx_bluecoat OR index=efx_wss cs_uri_path=*.php/* | regex cs_uri_extension="\.php\/[a-z0-9\.]+"
    | eval Description="Regex Match - Possible malware link" 
    | iplocation r_ip 
    | eval URL=cs_host.cs_uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description]
 | append 
    [ search (index=efx_wss OR index=efx_bluecoat OR index=efx_proxy) AND (cs_method=GET OR http_method=GET) NOT *google.com* NOT *doubleclick.net* NOT *cloudfront* NOT *yimg* NOT *tremorhub*  | rex field=url "[^\/]+(?<ns_uri>\/.+)" | eval uri_path=coalesce(cs_uri_path, ns_uri) | regex uri_path="^\/[a-zA-Z0-9_\-\.\/]+\/https?:\/[a-zA-Z0-9\/\.]{5,30}\/$"
    | eval Description="Regex Match - Emotet (RH-MP)" 
    | iplocation r_ip 
    | eval URL=cs_host.uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description]   
  | append [search index=efx_proxy OR index=efx_bluecoat *.cab OR *.reb 
| eval FullURI=cs_uri_path.cs_uri_query
| eval FullURI=trim(FullURI, "-")
| regex FullURI="\/[^\x3f]{1,255}\?[a-z]=[a-z]{1,16}[0-9]{1,2}\.(cab|reb)$"
| eval Description="Regex Match - RH-MP TA55/icedid"
| fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(FullURI) as FullURI values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description ]
 | append 
    [ search (index=efx_wss OR index=efx_bluecoat OR index=efx_proxy) AND docs.google.com /document | eval uri_path=coalesce(cs_uri, ns_uri) 
| regex uri_path="\/document\/[a-z]\/[a-z]\/2PACX-1v[a-z0-9A-z\-\_]+\/pub$"
    | eval Description="Regex Match - Googledocs trickbot/Bazar (RH-MP)" 
    | iplocation r_ip 
    | eval URL=cs_host.uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description] 
 | append 
    [ search (index=efx_wss OR index=efx_bluecoat OR index=efx_proxy) AND *.zip | eval uri_path=coalesce(cs_uri, ns_uri) 
| regex uri_path="\/[^\x2f]{1,255}\/(?:(?:[A-Z]{0,14}|(?:[A-Z]?[a-z]{3,14}){1,2})[_-]){1,2}(?:[0-9_-]{7,32}){1,2}\.zip$"
    | eval Description="Regex Match - Qbot (RH-MP) Added: 2020-10-29" 
    | iplocation r_ip 
    | eval URL=cs_host.uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description] 
  | append 
  [ search (index=efx_wss OR index=efx_bluecoat OR index=efx_proxy) (page=ATL* OR page=STL* OR page=SYQ* OR page=AN* OR page=YYZ* OR page=LBA* OR page=NT* OR page=UK* OR page=NBCL* OR page=LT* OR page=A* OR page=UST* OR page=EFX* OR page=YUL* OR page=DUB* OR page=PC* OR page=INV* OR page=MEX* OR page=P* OR page=DRI* OR page=DSM* OR page=IE* OR page=LHR* OR page=NBCL* OR page=SCL* OR page=LIM* OR page=ECL* OR page=EPU* OR page=MINI* OR page=EPP* OR page=X* OR page=EPP* OR page=NBM* OR page=SPRO* OR page=PG* OR page=ECL* OR page=LX* OR page=NB* OR page=IN* OR page=HP* OR page=CTC* OR page=DFW* OR page=XIP* OR page=UIO* OR page=SYD* OR page=SRV* OR page=AKL* OR page=MAD* OR page=NZ* OR page=AU* OR cs_uri=ATL* OR cs_uri=STL* OR cs_uri=SYQ* OR cs_uri=AN* OR cs_uri=YYZ* OR cs_uri=LBA* OR cs_uri=NT* OR cs_uri=UK* OR cs_uri=NBCL* OR cs_uri=LT* OR cs_uri=A* OR cs_uri=UST* OR cs_uri=EFX* OR cs_uri=YUL* OR cs_uri=DUB* OR cs_uri=PC* OR cs_uri=INV* OR cs_uri=MEX* OR cs_uri=P* OR cs_uri=DRI* OR cs_uri=DSM* OR cs_uri=IE* OR cs_uri=LHR* OR cs_uri=NBCL* OR cs_uri=SCL* OR cs_uri=LIM* OR cs_uri=ECL* OR cs_uri=EPU* OR cs_uri=MINI* OR cs_uri=EPP* OR cs_uri=X* OR cs_uri=EPP* OR cs_uri=NBM* OR cs_uri=SPRO* OR cs_uri=PG* OR cs_uri=ECL* OR cs_uri=LX* OR cs_uri=NB* OR cs_uri=IN* OR cs_uri=HP* OR cs_uri=CTC* OR cs_uri=DFW* OR cs_uri=XIP* OR cs_uri=UIO* OR cs_uri=SYD* OR cs_uri=SRV* OR cs_uri=AKL* OR cs_uri=MAD* OR cs_uri=NZ* OR cs_uri=AU* )  | rex field=page "[^\/]+(?<URI>.*)" | eval uri_path=coalesce(cs_uri, URI)
| regex uri_path="\/[a-z0-9]\/(ATL|STL|SYQ|AN|YYZ|LBA|NT|UK|NBCL|LT|UST|EFX|YUL|DUB|PC|INV|MEX|P|DRI|DSM|IE|LHR|NBCL|SCL|LIM|ECL|EPU|MINI|EPP|X|EPP|NBM|SPRO|PG|ECL|LX|NB|IN|HP|CTC|DFW|XIP|UIO|SYD|SRV|AKL|MAD|NZ|AU)\d+[A-Z_0-9\.]\/\d\/"
    | eval Description="Regex Match - Trickbot C2 (Added 2020-12-09)" 
    | eval r_ip=coalesce(r_ip, dest_ip), cs_host=coalesce(cs_host, dest), c_ip=coalesce(c_ip, srcip)
    | iplocation r_ip 
    | eval URL=cs_host.uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description ]
  | append 
  [ search (index=efx_wss OR index=efx_bluecoat OR index=efx_proxy) GET AND ( uri=*.jpg OR uri=*.png OR page=*.jpg OR page=*.png OR cs_uri=*.png OR cs_uri=*.jpg ) NOT http_content_type="image/*"
  | rex field=page "[^\/]+(?<URI>.*)" | eval uri_path=coalesce(cs_uri, URI)
| regex uri_path="\/([2-9])\1{3,}\.(?:png|jpg)$"
    | eval Description="Regex Match - RHMP - Qbot secondary URL pattern (Added 2021-01-07)" 
    | eval r_ip=coalesce(r_ip, dest_ip), cs_host=coalesce(cs_host, dest), c_ip=coalesce(c_ip, srcip)
    | iplocation r_ip 
    | eval URL=cs_host.uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description ]
| fillnull Description value="-" 
| search NOT (cs_host=*.windowsupdate.com OR cs_host=www.google.com OR cs_host=www.eclipse.org OR cs_host=*-docs.googleusercontent.com OR cs_host=updates.logitech.com OR cs_host=*.gvt1.com OR cs_host=*.adobe.com OR cs_host=*.apple.com OR http_content_type="image/*" OR cs_uri_path="/scripts/tools/newdsn.exe" OR cs_host="proxy.ec.equifax.com." OR cs_host="*.equifax.com." OR eclipse OR apache OR "/icudt61l.zip" OR 
    [| inputlookup SusExe-Whitelist.csv 
    | rename Whitelist as query 
    | fields query])  
| fillnull value="-" 
| eval URL=cs_host.cs_uri_path 
| iplocation r_ip 
| rex field=cs_uri_path "(?<EndURI>\/[A-Za-z0-9\-_\.]{1,255}$)" 
| lookup web-watchlist.csv Indicator as EndURI OUTPUT Description AS Description 
| rex field=url "[^\/]+(?<netskope_uri>\/.*)"
| fillnull value="-"
| eval c_ip=coalesce(c_ip, srcip), http_content_type=coalesce(data_type, http_content_type), cs_uri_path=coalesce(cs_uri_path, cs_uri), malware_name=coalesce(x_virus_id, ns_detection_name, malware_name), r_ip=coalesce(r_ip, dstip), url=coalesce(url, URL), Country=coalesce(dst_country, Country), src=coalesce(src, src_ip, c_ip), user_agent=coalesce(http_user_agent, browser), URI=coalesce(netskope_uri, cs_uri_path)
| rex field=url "(?<domain>[^\/]+)" 
| fillnull value="-"
| stats values(src) as src values(hostname) as hostname values(http_content_type) as content_type values(url) as url values(user_agent) as user_agent dc(URI) as FileCount values(malware_name) as alertname values("malsite_category{}") as malsite_category count by domain category Country Description
| search NOT (domain=*.google.com AND alertname="-") | where NOT domain="-"

#Suspicious Web Watchlist
index=efx_wss OR index=efx_bluecoat 
    [| inputlookup web-watchlist.csv 
    | rename Indicator as query | eval query="*".query."*"
    | fields query] 
    OR (cs_host="*.gov.*" OR cs_host="*.mil.*" NOT (category=Military OR category="*Government*" OR cs_host=*.gov.uk OR cs_host=*.mil.uk OR cs_host=*.gov.au OR cs_host=*.gov.ar OR cs_host=*.gov.ua OR cs_host=*.gov.co OR (cs_host=*.gov.* AND cs_host=*.ca) OR cs_host=*.gov.py OR cs_host=*.gov.br OR cs_host=*.gov.cr OR cs_host=*.gov.it OR cs_host="*.gov.in" OR cs_host=*.mil.ph OR cs_host=*.mil.co)) 
    OR ((cs_uri_extension=zip OR cs_uri_extension=doc OR cs_uri_extension=xls OR cs_uri_extension=bin OR cs_uri_extension=ps1 OR cs_uri_extension=bat OR (cs_uri_extension=jar NOT (cs_uri_path=*content.jar OR cs_host=marketplace.eclipse.org OR cs_host=download.springsource.com
 OR cs_host=nexus.broadleafcommerce.org OR cs_host=download.oracle.com OR cs_host=download.jboss.org) ) OR http_content_type="application/msword" OR cs_uri_extension=docm OR http_content_type=.macroEnabled OR cs_uri_extension=exe OR cs_uri_extension=dmg OR cs_uri_extension=pkg OR http_content_type="application/x-msdownload" OR http_content_type="application/x-msdos-program" OR (cs_uri_extension=iso AND bytes<10000) OR cs_uri_extension=ace OR (cs_uri_extension=img AND bytes<10000 NOT cs_host=*msn-com.akamaized.net) OR cs_uri_extension=rar) 
         AND (cs_uri_path=*invoice* OR (cs_uri_path=*INV* NOT (cs_uri_path=*INVE* OR cs_uri_path=*invol* OR cs_uri_path=*Invoke-HX*)) OR cs_uri_path=*bill* OR cs_uri_path=*rechnung* OR cs_uri_path=*factura* OR cs_uri_path=*reigelridge* OR cs_uri_path=*delivery* OR cs_uri_path=*fedex* OR cs_uri_path=*TRANSFERENCIA* OR cs_uri_path=*remcos* OR cs_uri_path=*tax* OR cs_uri_path=*refund* OR cs_uri_path=*payment* OR cs_uri_path=*confirmation* OR cs_uri_path=*remittance* OR cs_uri_path=*_encrypted_* OR cs_uri_query=*/wp-includes/* OR cs_uri_query=*/wp-content/* OR cs_uri_query=*/wp-admin/* OR cs_uri_query=*/wordpress/* OR cs_uri_query=*/cgi-bin/* OR cs_uri_path=*/wp-includes/* OR cs_uri_path=*/wp-content/* OR cs_uri_path=*/wp-admin/* OR cs_uri_path=*/wordpress/* OR cs_uri_path=*/cgi-bin/* OR cs_uri_path=*/joomla/* OR category=suspicious OR category=none OR category=unknown OR category=mal* OR category="Remote Access" OR category="Potentially Unwanted Software" OR category=Spyware) 
              NOT (cs_host=*.edu OR cs_host=repo.grails.org OR cs_host="*.equifax.com" OR cs_host="*.docusign.net" OR cs_host=hub.docker.com OR cs_host=id.docker.com OR cs_host=invoice.risk.lexisnexis.com OR cs_host=support.symantec.com OR cs_host=www.paypal.com OR cs_uri_path=*/ews-de-billingextract* OR cs_host=www.dicom.cl OR http_content_type=image/)) 
    OR (http_user_agent="AutoIt" OR http_user_agent=wscript ) 
    OR (http_content_type="application/x-msdos-program" NOT (cs_uri_extension=exe OR cs_uri_extension=dll))
| fillnull value=" " 
| eval URL=cs_host.cs_uri_path 
| iplocation r_ip 
| rex field=cs_uri_path "(?<EndURI>\/[A-Za-z0-9\-_\.]{1,255}$)" 
| lookup web-watchlist.csv Indicator as EndURI OUTPUT Description AS Description 
| append 
    [ search index=efx_bluecoat OR index=efx_wss cs_uri_extension=exe OR http_content_type=application/x-msdos-program NOT (http_content_type="text/*" OR http_content_type="image/*" OR http_content_type="application/json*" OR http_content_type="audio/*" OR http_content_type="application/x-javascript" OR cs_uri_path="/scripts/tools/newdsn.exe" OR 
        [| inputlookup SusExe-Whitelist.csv 
        | rename Whitelist as query 
        | fields query]) 
    | rex field=cs_uri_path "\/(?<FileName>[A-Za-z0-9_\.%]+$)" 
    | regex FileName="(?i)^\d[A-Z0-9a-z_]+?\.exe$|^[a-zA-Z0-9]{1,3}\.exe$" 
    | eval Description="Regex Match" 
    | iplocation r_ip 
    | eval URL=cs_host.cs_uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description] 
| append 
    [ search index=efx_bluecoat OR index=efx_wss cs_host=pastebin.com
    | regex cs_uri_path="\/raw\/[a-zA-Z0-9]{8}"
    | eval Description="Regex Match" 
    | iplocation r_ip 
    | eval URL=cs_host.cs_uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description]
| append 
    [ search (index=efx_wss OR index=efx_bluecoat) cs_uri_extension=png 
    | regex cs_uri_path="\/[a-z0-9]{3,15}\.png\?uid=([A-Za-z0-9\+\/\-]{64,512}[=]{0,2})?"
    | eval Description="Regex Match - Quakbot SIR0048786" 
    | iplocation r_ip 
    | eval URL=cs_host.cs_uri_path 
    | fillnull value="-" 
    | stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description]
| fillnull Description value="-" 
| search NOT (cs_host=*.windowsupdate.com OR cs_host=www.google.com OR cs_host=www.eclipse.org OR cs_host=updates.logitech.com OR cs_host=*.gvt1.com OR cs_host=*.adobe.com OR cs_host=*.apple.com OR http_content_type="image/*" OR cs_uri_path="/scripts/tools/newdsn.exe" OR 
    [| inputlookup SusExe-Whitelist.csv 
    | rename Whitelist as query 
    | fields query])  | regex cs_host="[a-zA-Z0-9\-]+\.[a-zA-Z0-9\-]+"
| stats values(c_ip) as srcip values(cs_uri_scheme) as Protocol values(http_method) as http_method values(http_content_type) as content_type values(URL) as URL values(http_user_agent) as UserAgent dc(cs_uri_path) as FileCount count by cs_host r_ip category Country Description

#TH-DD-008 - Beaconing Detection
index=summary search_name=SI-Domains* NOT (Domain=*.webex.com OR [|inputlookup BeaconingDomains.csv | fields Domain
 |search NOT [|inputlookup web-watchlist.csv | rename Indicator as Domain | fields Domain | regex Domain="^[a-zA-Z0-9\-]+\.[a-zA-Z0-9\-]+.*"] ])
| streamstats current=f last(_time) as next_time by Domain HostName EndpointIP URLClassification Country HostNameCount | eval gap = next_time - _time 
 | stats values(UserName) as UserName earliest(_time) as FirstTime latest(_time) as LastTime dc(date_mday) as DayCount count avg(gap) as AvgGap var(gap) as VarGap by Domain HostName EndpointIP URLClassification Country HostNameCount 
| where count>4 AND DayCount>1 AND AvgGap <6000
| eval time_range=LastTime-FirstTime
| where NOT Domain="-"
| eval FirstTime=strftime(FirstTime, "%Y-%m-%d %H:%M:%S"), LastTime=strftime(LastTime, "%Y-%m-%d %H:%M:%S"), time_range=round((time_range/3600),2)."h", AvgGap=round(AvgGap,2), VarGap=round(VarGap, 2)

#TH-DD-008 - Beaconing Detection Clone
index=summary search_name=SI-Domains* NOT (Domain=*.webex.com OR [|inputlookup BeaconingDomains.csv | fields Domain
 |search NOT [|inputlookup web-watchlist.csv | rename Indicator as Domain | fields Domain | regex Domain="^[a-zA-Z0-9\-]+\.[a-zA-Z0-9\-]+.*"] ])
| streamstats current=f last(_time) as next_time by Domain HostName EndpointIP URLClassification Country HostNameCount | eval gap = next_time - _time 
 | stats values(UserName) as UserName earliest(_time) as FirstTime latest(_time) as LastTime dc(date_mday) as DayCount count avg(gap) as AvgGap var(gap) as VarGap by Domain HostName EndpointIP URLClassification Country HostNameCount 
| where count>4 AND DayCount>1 AND AvgGap <6000
| eval time_range=LastTime-FirstTime
| where NOT Domain="-"
| eval FirstTime=strftime(FirstTime, "%Y-%m-%d %H:%M:%S"), LastTime=strftime(LastTime, "%Y-%m-%d %H:%M:%S"), time_range=round((time_range/3600),2)."h", AvgGap=round(AvgGap,2), VarGap=round(VarGap, 2)
| rename EndpointIP as "src_ip" UserName as username
| sort AvgGap

TH-DD-010 - Exfiltration Detection (Rapid Detection)
index=summary search_name="SI-Domains*" NOT (Domain=amazonaws.com OR Domain="172.16.0.0/12" OR Domain="192.168.0.0/16" OR Domain="10.0.0.0/8" OR Domain=google.com OR Domain=fireeye.com OR Domain=windowsupdate.com OR Domain=*.netapp.com OR [|inputlookup TH-DD-010-history.csv | fields Domain | search NOT [|inputlookup web-watchlist.csv | rename Indicator as Domain | fields Domain]] )
| rex mode=sed max_match=0 field=EndpointIP "s/\s/_/g" | eval EndpointIP=split(EndpointIP,"_") | mvexpand EndpointIP
| table EndpointIP BytesIn BytesOut Country Domain
| stats sum(BytesIn) as BytesIn sum(BytesOut) as BytesOut values(Country) as Country count by Domain EndpointIP
| eval Delta=round(((BytesOut-BytesIn)/(1024*1024)),2)
| where Delta >500
| stats sum(BytesIn) as BytesIn sum(BytesOut) as BytesOut values(Country) as Country values(EndpointIP) as EndpointIP sum(Delta) as Delta count by Domain
| rename Delta as "Delta (MB)"
| table Domain Country BytesIn BytesOut "Delta (MB)"

#Threat Hunting - Suspicious Gmail Link Clicks
(index=efx_wss OR index=efx_bluecoat) cs_uri_query="*&source=gmail*" OR cs_host=protect.fireeye.com OR cs_host=protect2.fireeye.com  (cs_uri_query=*/wp-includes/* OR cs_uri_query=*/wp-content/* OR cs_uri_query=*/wp-admin/* OR cs_uri_query=*/wordpress/* OR cs_uri_query=*/cgi-bin/* OR cs_uri_query="*.iso*" OR cs_uri_query=*.exe* OR cs_uri_query=*.js OR cs_uri_query=*.doc* OR cs_uri_query=*invoice*) NOT (cs_domain=ibm.com OR cs_domain=www.ibm.com OR cs_domain=*documents.adobe.com OR [|inputlookup SusExe-Whitelist.csv | rename Whitelist as query | fields query])
| rex field=cs_uri_query "\?q\=(?<GLinkURL>https?:\/\/[A-Za-z0-9\-\.\/%\,_\&\:]+)&source=gmail" 
| rex field=cs_uri_query "&u=(?<FELinkURL>[^ ]+)"
| eval LinkURL=coalesce(GLinkURL, FELinkURL)
| search (LinkURL=*/wp-includes/* OR LinkURL=*/wp-content/* OR LinkURL=*/wp-admin/* OR LinkURL=*/wordpress/* OR LinkURL=*/cgi-bin/* OR LinkURL="*.iso*" OR LinkURL=*.exe* OR LinkURL=*.js OR LinkURL=*.doc*  OR cs_uri_query=*invoice*)  NOT (LinkURL="*.equifax.com/*" OR LinkURL="*.docusign.net/* OR LinkURL=https://hub.docker.com/* OR LinkURL=https://id.docker.com/* OR LinkURL=https://invoice.risk.lexisnexis.com/* OR LinkURL=https://support.symantec.com/* OR LinkURL=https://www.paypal.com/* OR LinkURL=https://www.dicom.cl/*")| fillnull value="-" | where NOT LinkURL="-"
| eval UserName=coalesce(RH_username,cs_userdn)
| stats values(UserName) as UserName values(src) as SourceIP count by LinkURL
| search NOT (LinkURL="*.equifax.com/*" OR LinkURL="*.docusign.net/*" OR LinkURL=https://hub.docker.com/* OR LinkURL=https://id.docker.com/* OR LinkURL=https://invoice.risk.lexisnexis.com/* OR LinkURL=https://support.symantec.com/* OR LinkURL=https://www.paypal.com/* OR LinkURL=https://www.dicom.cl/* OR [|inputlookup SusExe-Whitelist.csv | rename Whitelist as query | fields query])

#SOC Current Open Events
(index=efx_wss OR index=efx_bluecoat) cs_uri_query="*&source=gmail*" OR cs_host=protect.fireeye.com OR cs_host=protect2.fireeye.com  (cs_uri_query=*/wp-includes/* OR cs_uri_query=*/wp-content/* OR cs_uri_query=*/wp-admin/* OR cs_uri_query=*/wordpress/* OR cs_uri_query=*/cgi-bin/* OR cs_uri_query="*.iso*" OR cs_uri_query=*.exe* OR cs_uri_query=*.js OR cs_uri_query=*.doc* OR cs_uri_query=*invoice*) NOT (cs_domain=ibm.com OR cs_domain=www.ibm.com OR cs_domain=*documents.adobe.com OR [|inputlookup SusExe-Whitelist.csv | rename Whitelist as query | fields query])
| rex field=cs_uri_query "\?q\=(?<GLinkURL>https?:\/\/[A-Za-z0-9\-\.\/%\,_\&\:]+)&source=gmail" 
| rex field=cs_uri_query "&u=(?<FELinkURL>[^ ]+)"
| eval LinkURL=coalesce(GLinkURL, FELinkURL)
| search (LinkURL=*/wp-includes/* OR LinkURL=*/wp-content/* OR LinkURL=*/wp-admin/* OR LinkURL=*/wordpress/* OR LinkURL=*/cgi-bin/* OR LinkURL="*.iso*" OR LinkURL=*.exe* OR LinkURL=*.js OR LinkURL=*.doc*  OR cs_uri_query=*invoice*)  NOT (LinkURL="*.equifax.com/*" OR LinkURL="*.docusign.net/* OR LinkURL=https://hub.docker.com/* OR LinkURL=https://id.docker.com/* OR LinkURL=https://invoice.risk.lexisnexis.com/* OR LinkURL=https://support.symantec.com/* OR LinkURL=https://www.paypal.com/* OR LinkURL=https://www.dicom.cl/*")| fillnull value="-" | where NOT LinkURL="-"
| eval UserName=coalesce(RH_username,cs_userdn)
| stats values(UserName) as UserName values(src) as SourceIP count by LinkURL
| search NOT (LinkURL="*.equifax.com/*" OR LinkURL="*.docusign.net/*" OR LinkURL=https://hub.docker.com/* OR LinkURL=https://id.docker.com/* OR LinkURL=https://invoice.risk.lexisnexis.com/* OR LinkURL=https://support.symantec.com/* OR LinkURL=https://www.paypal.com/* OR LinkURL=https://www.dicom.cl/* OR [|inputlookup SusExe-Whitelist.csv | rename Whitelist as query | fields query])
